@use "../colors" as colors;
@use "../fonts" as fonts;
@use "sass:color";

@function repeat($character, $n) {
  $c: "";
  @for $i from 1 through $n {
    $c: $c + $character;
  }
  @return $c;
}

$groups: (
  "tr-gr1": colors.$col-light-1,
  "tr-gr2": colors.$col-light-2,
  "tr-gr3": colors.$col-light-4,
);

@each $gr, $num in $groups {
  .#{$gr} td {
    position: relative;

    &::before {
      content: "";
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      opacity: 0.15;
      pointer-events: none;
      background: #{$num};
    }
  }

  span[#{$gr}] {
    width: 20px;
    height: 1em;
    display: inline-block;
    opacity: 0.4;
    background-color: #{$num};
  }
}

.md-typeset #input-table:not([class]) {
  display: table;
}

.table-container {
  & .md-typeset__table {
    min-width: 100%;
  }

  #input-table {
    pre {
      display: inline;
    }

    tr td {
      border: none;
      padding: 0.4em 0.4em;
    }
    td > span {
      display: block ruby;
    }

    @include colors.light-theme {
      tr.inferred * {
        color: color.adjust(black, $alpha: -0.5);
      }
    }

    @include colors.dark-theme {
      tr.inferred * {
        color: color.adjust(white, $alpha: -0.75);
      }
    }

    @include colors.light-theme {
      tr.required td:first-child * {
        color: color.adjust(red, $saturation: -50%);
      }
    }

    @include colors.dark-theme {
      tr.required td:first-child * {
        color: color.adjust(red, $saturation: -50%, $lightness: +20%);
      }
    }

    $max-depth: 10;

    tr[data-depth] {
      @for $i from 1 through $max-depth {
        &[data-depth="#{$i}"] {
          td:first-child {
            & > pre {
              margin-left: $i * 15px;
            }
          }
        }
      }
    }

    tr.category {
      margin-top: 20px !important;
      @for $i from 0 through $max-depth {
        $border-alpha-adjust: 0.2 * ($i + 1);
        $alpha-adjust: 0.1 * ($i + 1);
        &[data-depth="#{$i}"] {
          td {
            border-bottom: 1px
              dashed
              color.adjust(#80808000, $alpha: $border-alpha-adjust);
            border-top: 2px
              solid
              color.adjust(#80808000, $alpha: $border-alpha-adjust);
            background: color.adjust(#80808000, $alpha: $alpha-adjust);
          }
        }
      }
      & td:first-child {
        span:before {
          content: "{";
          margin-right: 0.5em;
          font-size: 1.2em;
        }
        span:after {
          content: "}";
          margin-left: 0.5em;
          font-size: 1.2em;
        }
      }
    }

    pre.type {
      padding: 0.1em 0.4em;
      border-radius: 5px;
    }

    @include colors.light-theme {
      pre.type {
        background-color: color.adjust(black, $alpha: -0.9);
      }
    }

    @include colors.dark-theme {
      pre.type {
        background-color: color.adjust(white, $alpha: -0.75);
      }
    }
  }

  .type-tooltip {
    .type {
      cursor: pointer;
      border-bottom-left-radius: 0 !important;
      border-bottom-right-radius: 0 !important;
    }
    @include colors.light-theme {
      .type {
        border-bottom: 1.5px dotted gray;
      }
    }

    @include colors.dark-theme {
      .type {
        border-bottom: 1.5px dotted white;
      }
    }

    .tooltiptext {
      visibility: hidden;
      background-color: #000000af;
      color: #fff !important;
      text-align: left;
      border-radius: 5px;
      padding: 0.25em 0.5em;
      position: absolute;
      z-index: 1;
      backdrop-filter: blur(10px);

      font-family: fonts.$mono-font;

      &::before {
        content: "{";
      }
      &::after {
        content: "}";
      }
    }
    & .type:hover ~ .tooltiptext {
      visibility: visible;
    }
  }

  .note-tooltip {
    .description {
      cursor: pointer;
      border-bottom-left-radius: 0 !important;
      border-bottom-right-radius: 0 !important;

      @include colors.light-theme {
        border-bottom: 1.5px dotted gray;
      }

      @include colors.dark-theme {
        border-bottom: 1.5px dotted white;
      }
    }

    .tooltiptext {
      max-width: 500px;
      visibility: hidden;
      background-color: #000000af;
      color: #fff !important;
      text-align: left;
      border-radius: 5px;
      padding: 0.25em 0.5em;
      position: absolute;
      z-index: 1;
      backdrop-filter: blur(10px);
      pre {
        color: white !important;
      }

      // font-family: fonts.$mono-font;
    }
    & .description:hover ~ .tooltiptext {
      visibility: visible;
    }
  }
}

.table-legend table {
  @include colors.light-theme {
    tr.required td:first-child * {
      color: color.adjust(red, $saturation: -50%);
    }
    tr.inferred td:first-child * {
      color: color.adjust(black, $alpha: -0.5);
    }
  }

  @include colors.dark-theme {
    tr.required td:first-child * {
      color: color.adjust(red, $saturation: -50%, $lightness: +20%);
    }
    tr.inferred td:first-child * {
      color: color.adjust(white, $alpha: -0.75);
    }
  }
}
